{"ast":null,"code":"import { connect } from 'react-redux';\nimport HomePage from '../components/HomePage';\nimport { getGithub, changeUserId } from '../../actions';\nexport default connect(state => ({\n  userId: state.getIn(['github', 'userId'])\n}), dispatch => ({\n  onChangeUserId: event => dispatch(changeUserId(event.target.value)),\n  onSubmitUserId: userId => () => dispatch(getGithub(userId))\n}), (stateProps, dispatchProps, ownProps) => {\n  const {\n    userId\n  } = stateProps;\n  const {\n    onSubmitUserId\n  } = dispatchProps;\n  return Object.assign({}, stateProps, dispatchProps, ownProps, {\n    onSubmitUserId: onSubmitUserId(userId)\n  });\n})(HomePage);","map":{"version":3,"sources":["C:/Users/85251/Desktop/React/github-finder-app/src/containers/HomePageContainer.js"],"names":["connect","HomePage","getGithub","changeUserId","state","userId","getIn","dispatch","onChangeUserId","event","target","value","onSubmitUserId","stateProps","dispatchProps","ownProps","Object","assign"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SACEC,SADF,EAEEC,YAFF,QAGO,eAHP;AAKA,eAAeH,OAAO,CACnBI,KAAD,KAAY;AACVC,EAAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,EAAW,QAAX,CAAZ;AADE,CAAZ,CADoB,EAInBC,QAAD,KAAe;AACbC,EAAAA,cAAc,EAAGC,KAAD,IACdF,QAAQ,CAACJ,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CAFG;AAIbC,EAAAA,cAAc,EAAGP,MAAD,IAAY,MAC1BE,QAAQ,CAACL,SAAS,CAACG,MAAD,CAAV;AALG,CAAf,CAJoB,EAYpB,CAACQ,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,KAAyC;AACvC,QAAM;AAAEV,IAAAA;AAAF,MAAaQ,UAAnB;AACA,QAAM;AAAED,IAAAA;AAAF,MAAqBE,aAA3B;AACA,SAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,UAAlB,EAA8BC,aAA9B,EAA6CC,QAA7C,EAAuD;AAC5DH,IAAAA,cAAc,EAAEA,cAAc,CAACP,MAAD;AAD8B,GAAvD,CAAP;AAGD,CAlBmB,CAAP,CAmBbJ,QAnBa,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport HomePage from '../components/HomePage';\r\n\r\nimport {\r\n  getGithub,\r\n  changeUserId,\r\n} from '../../actions';\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    userId: state.getIn(['github', 'userId']),\r\n  }),\r\n  (dispatch) => ({\r\n    onChangeUserId: (event) => (\r\n      dispatch(changeUserId(event.target.value))\r\n    ),\r\n    onSubmitUserId: (userId) => () => (\r\n      dispatch(getGithub(userId))\r\n    ),\r\n  }),\r\n  (stateProps, dispatchProps, ownProps) => {\r\n    const { userId } = stateProps;\r\n    const { onSubmitUserId } = dispatchProps;\r\n    return Object.assign({}, stateProps, dispatchProps, ownProps, {\r\n      onSubmitUserId: onSubmitUserId(userId),\r\n    });\r\n  }\r\n)(HomePage);"]},"metadata":{},"sourceType":"module"}